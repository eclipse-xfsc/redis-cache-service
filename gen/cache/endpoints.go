// Code generated by goa v3.20.1, DO NOT EDIT.
//
// cache endpoints
//
// Command:
// $ goa gen github.com/eclipse-xfsc/redis-cache-service/design

package cache

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "cache" service endpoints.
type Endpoints struct {
	Get         goa.Endpoint
	Set         goa.Endpoint
	SetExternal goa.Endpoint
}

// NewEndpoints wraps the methods of the "cache" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Get:         NewGetEndpoint(s),
		Set:         NewSetEndpoint(s),
		SetExternal: NewSetExternalEndpoint(s),
	}
}

// Use applies the given middleware to all the "cache" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Get = m(e.Get)
	e.Set = m(e.Set)
	e.SetExternal = m(e.SetExternal)
}

// NewGetEndpoint returns an endpoint function that calls the method "Get" of
// service "cache".
func NewGetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CacheGetRequest)
		return s.Get(ctx, p)
	}
}

// NewSetEndpoint returns an endpoint function that calls the method "Set" of
// service "cache".
func NewSetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CacheSetRequest)
		return nil, s.Set(ctx, p)
	}
}

// NewSetExternalEndpoint returns an endpoint function that calls the method
// "SetExternal" of service "cache".
func NewSetExternalEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CacheSetRequest)
		return nil, s.SetExternal(ctx, p)
	}
}
