// Code generated by goa v3.20.1, DO NOT EDIT.
//
// cache service
//
// Command:
// $ goa gen github.com/eclipse-xfsc/redis-cache-service/design

package cache

import (
	"context"
)

// Cache service allows storing and retrieving data from distributed cache.
type Service interface {
	// Get JSON value from the cache.
	Get(context.Context, *CacheGetRequest) (res any, err error)
	// Set a JSON value in the cache.
	Set(context.Context, *CacheSetRequest) (err error)
	// Set an external JSON value in the cache and provide an event for the input.
	SetExternal(context.Context, *CacheSetRequest) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "cache"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "cache"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"Get", "Set", "SetExternal"}

// CacheGetRequest is the payload type of the cache service Get method.
type CacheGetRequest struct {
	Key       string
	Namespace *string
	Scope     *string
	Strategy  *string
}

// CacheSetRequest is the payload type of the cache service Set method.
type CacheSetRequest struct {
	Data      any
	Key       string
	Namespace *string
	Scope     *string
	TTL       *int
}
