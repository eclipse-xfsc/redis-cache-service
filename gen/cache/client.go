// Code generated by goa v3.20.1, DO NOT EDIT.
//
// cache client
//
// Command:
// $ goa gen github.com/eclipse-xfsc/redis-cache-service/design

package cache

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "cache" service client.
type Client struct {
	GetEndpoint         goa.Endpoint
	SetEndpoint         goa.Endpoint
	SetExternalEndpoint goa.Endpoint
}

// NewClient initializes a "cache" service client given the endpoints.
func NewClient(get, set, setExternal goa.Endpoint) *Client {
	return &Client{
		GetEndpoint:         get,
		SetEndpoint:         set,
		SetExternalEndpoint: setExternal,
	}
}

// Get calls the "Get" endpoint of the "cache" service.
func (c *Client) Get(ctx context.Context, p *CacheGetRequest) (res any, err error) {
	var ires any
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(any), nil
}

// Set calls the "Set" endpoint of the "cache" service.
func (c *Client) Set(ctx context.Context, p *CacheSetRequest) (err error) {
	_, err = c.SetEndpoint(ctx, p)
	return
}

// SetExternal calls the "SetExternal" endpoint of the "cache" service.
func (c *Client) SetExternal(ctx context.Context, p *CacheSetRequest) (err error) {
	_, err = c.SetExternalEndpoint(ctx, p)
	return
}
